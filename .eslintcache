[{"/Users/aureliell/particeep/particeep/src/index.js":"1","/Users/aureliell/particeep/particeep/src/App.js":"2","/Users/aureliell/particeep/particeep/src/reportWebVitals.js":"3","/Users/aureliell/particeep/particeep/src/data/movies.js":"4","/Users/aureliell/particeep/particeep/src/reducers/movies.js":"5","/Users/aureliell/particeep/particeep/src/components/Movies.js":"6","/Users/aureliell/particeep/particeep/src/components/CardMovie.js":"7"},{"size":500,"mtime":1612273129320,"results":"8","hashOfConfig":"9"},{"size":374,"mtime":1612350130316,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612273129321,"results":"11","hashOfConfig":"9"},{"size":1262,"mtime":1612277094500,"results":"12","hashOfConfig":"9"},{"size":237,"mtime":1612346562228,"results":"13","hashOfConfig":"9"},{"size":4832,"mtime":1612358233488,"results":"14","hashOfConfig":"9"},{"size":3327,"mtime":1612358386196,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ijvace",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aureliell/particeep/particeep/src/index.js",[],["33","34"],"/Users/aureliell/particeep/particeep/src/App.js",[],"/Users/aureliell/particeep/particeep/src/reportWebVitals.js",[],"/Users/aureliell/particeep/particeep/src/data/movies.js",[],"/Users/aureliell/particeep/particeep/src/reducers/movies.js",["35"],"export default function(movies = [] , action) {\n\n    if(action.type === 'setMovies') {\n        return action.data\n    } else if (action.type === 'updateMovies') {\n        return(action.newList)\n    } else {\n        return movies \n    }\n}","/Users/aureliell/particeep/particeep/src/components/Movies.js",["36","37","38","39"],"import React from 'react'\nimport {connect} from 'react-redux';\nimport { useState, useEffect  } from 'react';\n\nimport { movies$ } from '../data/movies';\nimport CardMovie from './CardMovie';\n\nimport {Form} from 'react-bootstrap';\n\nfunction Movies({setMoviesToRedux, moviesFromRedux}) {\n    const [categories, setCategories] = useState([]);\n    const [categorySelected, setCategorySelected] = useState(null);\n    const [allMoviesToDisplay, setAllMoviesToDisplay] = useState([]);\n    const [moviesToDisplay, setMoviesToDisplay] = useState([]);\n    const [numberOfPages, setNumberOfPages] = useState(0);\n    const [numberOnPage, setNumberOnPage] = useState(4);\n    const [active, setActive] = useState(1);\n\n    useEffect(() => {\n        movies$.then(data => {\n            const dataList = data.map(movie => {\n                return {...movie, like:false}\n            })\n            setMoviesToRedux(dataList)\n        }\n        )\n      }, []);\n\n    useEffect(() => {\n        const searchCAllCategories = moviesFromRedux.map(movie => movie.category)\n        setCategories(Array.from(new Set (searchCAllCategories)))\n        setAllMoviesToDisplay(moviesFromRedux)\n        setNumberOfPages(moviesFromRedux.length%numberOnPage === 0 ? moviesFromRedux.length/numberOnPage : moviesFromRedux.length/numberOnPage + 1)\n      }, [moviesFromRedux])\n\n    useEffect(() => {\n        let toDisplay = [...allMoviesToDisplay]\n        toDisplay.splice(numberOnPage * active -1, numberOnPage)\n        setMoviesToDisplay(toDisplay)\n    }, [allMoviesToDisplay, numberOnPage, active])\n    \n    useEffect(() => {\n        if (categorySelected === 'All'){\n            setAllMoviesToDisplay(moviesFromRedux)\n        } else {\n            const moviesSelected = moviesFromRedux.filter(movie => movie.category === categorySelected)\n            setAllMoviesToDisplay(moviesSelected)\n        }\n    }, [categorySelected])\n\n    const choiceNumber = (numberOnPage, page) => {\n       // let movies = \n    } \n\n\n    let items = [];\n    for (let number = 1; number <= numberOfPages; number++) {\n    items.push(\n        <div \n            key={number} \n            className='pagination_button'\n            style={{cursor:'pointer', backgroundColor: active === number && '#696969'}}\n            onClick={()=> setActive(number)}\n        >\n            {number}\n        </div>,\n    );\n    }\n\n    return (\n        <div className=\"App\">\n            <div className='header'>\n                <h4 style={{color:'grey', marginBottom:20}}> Choisissez votre catégorie préférée :</h4>\n                <Form style={{ marginBottom:20}}>\n                    <Form.Group controlId=\"categories\" >\n                        <Form.Control as=\"select\"  \n                            style={{minWidth:'30%'}}\n                            onChange={(item)=> setCategorySelected(item.target.value)}>\n                            <option>All</option>\n                            {\n                                categories.map(category => {\n                                    return (\n                                        <option style={{color:'red'}}>{category}</option>\n                                    )\n                                })\n                            }\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </div>\n            <div style={{width:'100%', display:'flex'}}>\n                <div className='row_pagination'>\n                    {items}\n\n                    <p style={{fontSize:10, marginLeft:10, marginRight:10}}>Résultats par page :</p>\n                    <Form >\n                        <Form.Group controlId=\"resultats\" >\n                            <Form.Control as=\"select\"  \n                                style={{minWidth:'30%'}}\n                                onChange={(item)=> setNumberOnPage(item.target.value)}>\n                                <option>4</option>\n                                <option>8</option>\n                                <option>12</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </div>\n                \n            </div>\n            <div className='movies_row'>\n                { \n                    moviesToDisplay.map(movie => {\n                        return(\n                            <CardMovie key={movie.id} movie={movie}/>\n                        )\n                    })\n                }\n            </div>\n      </div>\n    )\n};\n\nfunction mapDispatchToProps (dispatch) {\n    return {\n        setMoviesToRedux: function(data){\n            dispatch({type:'setMovies', data: data})\n        }\n    }\n};\n\nfunction mapStateToProps(state) {\n    return { moviesFromRedux : state.movies }\n};\n\nexport default connect(\n    mapStateToProps, \n    mapDispatchToProps\n  )(Movies);\n","/Users/aureliell/particeep/particeep/src/components/CardMovie.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":1,"nodeType":"46","endLine":10,"endColumn":2},{"ruleId":"47","severity":1,"message":"48","line":27,"column":10,"nodeType":"49","endLine":27,"endColumn":12,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"51","line":34,"column":10,"nodeType":"49","endLine":34,"endColumn":27,"suggestions":"52"},{"ruleId":"47","severity":1,"message":"53","line":49,"column":8,"nodeType":"49","endLine":49,"endColumn":26,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":51,"column":11,"nodeType":"57","messageId":"58","endLine":51,"endColumn":23},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMoviesToRedux'. Either include it or remove the dependency array. If 'setMoviesToRedux' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["61"],"React Hook useEffect has a missing dependency: 'numberOnPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberOfPages' needs the current value of 'numberOnPage'.",["62"],"React Hook useEffect has a missing dependency: 'moviesFromRedux'. Either include it or remove the dependency array. If 'setAllMoviesToDisplay' needs the current value of 'moviesFromRedux', you can also switch to useReducer instead of useState and read 'moviesFromRedux' in the reducer.",["63"],"no-unused-vars","'choiceNumber' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [setMoviesToRedux]",{"range":"70","text":"71"},"Update the dependencies array to be: [moviesFromRedux, numberOnPage]",{"range":"72","text":"73"},"Update the dependencies array to be: [categorySelected, moviesFromRedux]",{"range":"74","text":"75"},[933,935],"[setMoviesToRedux]",[1313,1330],"[moviesFromRedux, numberOnPage]",[1864,1882],"[categorySelected, moviesFromRedux]"]